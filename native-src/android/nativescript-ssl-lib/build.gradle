apply plugin: 'com.android.library'

android {
    compileSdkVersion 26
    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 26
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false            
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}

gradle.buildFinished {
    description "Copies the .aar file to the plugin folder after build."

    def path = "$projectDir/build/outputs/aar/" // might break if you build it for other than debug
    def pathDebug = path + "nativescript-ssl-lib-debug.aar"
    def debugFile = file(pathDebug)
    def pathRelease = path + "nativescript-ssl-lib-release.aar"
    def releaseFile = file(pathRelease)
    if(debugFile.exists()) {
        println("Copying debug instance of .aar")
        copy {
            from pathDebug
            into "$projectDir/../../../src/platforms/android/"
            rename "nativescript-ssl-lib-debug.aar", "nativescript-ssl-lib.aar"
        }        
    } else {
        if(releaseFile.exists()) {
            println("Copying release instance of .aar")
            copy {
                from pathRelease
                into "$projectDir/../../../src/platforms/android/"
                rename "nativescript-ssl-lib-release.aar", "nativescript-ssl-lib.aar"
            }
        }
    }
    
}